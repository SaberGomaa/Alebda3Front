@page "/login"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using System.Text.Json
@using System.Net.Http.Json
@using System.Text

<link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600&display=swap" rel="stylesheet">
<link href="css/login.css" rel="stylesheet" />

<div class="login-container" style="height:fit-content;">
    <h2 class="text-center">تسجيل الدخول</h2>
    <form @onsubmit="HandleLogin">
        <!-- Username Field -->
        <div class="form-group">
            <label for="username">اسم المستخدم</label>
            <input class="form-control" id="username" placeholder="ادخل اسم المستخدم" required @bind="username" />
            @if (!string.IsNullOrEmpty(usernameError))
            {
                <div class="text-danger">@usernameError</div>
            }
        </div>

        <!-- Password Field -->
        <div class="form-group">
            <label for="password">كلمة المرور</label>
            <input type="@passwordInputType" class="form-control" id="password" placeholder="ادخل كلمة المرور" required @bind="password" />
            <button type="button" class="btn btn-link" @onclick="TogglePasswordVisibility">
                @(hidePassword ? "إظهار" : "إخفاء")
            </button>
            @if (!string.IsNullOrEmpty(passwordError))
            {
                <div class="text-danger">@passwordError</div>
            }
        </div>

        <!-- Forgot Password -->
        <div class="remember-forgot">
            <a href="/auth/forget-password" class="forgot-password">هل نسيت كلمة المرور؟</a>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="login-button">تسجيل الدخول</button>

        <!-- Sign Up Link -->
        <div class="signup-link">
            ليس لديك حساب؟ <a href="/register">إنشاء حساب</a>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="text-danger mt-2">@errorMessage</div>
        }
    </form>
</div>

@code {
    public class ApiResponse
    {
        public string Status { get; set; }
        public ApiData Data { get; set; }
    }

    public class ApiData
    {
        public int Id { get; set; }
        public bool IsAuthenticated { get; set; }
        public string Token { get; set; }
        public bool IsAdmin { get; set; }
    }

    private string username = "";
    private string password = "";
    private string errorMessage = "";
    private string usernameError;
    private string passwordError;
    private bool hidePassword = true;

    private string passwordInputType => hidePassword ? "password" : "text";

    private void TogglePasswordVisibility()
    {
        hidePassword = !hidePassword;
    }

    private async Task HandleLogin()
    {
        var loginData = new { username, password };
        var request = new HttpRequestMessage(HttpMethod.Post, "api/User/login")
            {
                Content = new StringContent(JsonSerializer.Serialize(loginData), Encoding.UTF8, "application/json")
            };

        try
        {
            var response = await Http.SendAsync(request);
            var responseData = await response.Content.ReadFromJsonAsync<ApiResponse>();

            if (response.IsSuccessStatusCode && responseData?.Data?.IsAuthenticated == true)
            {
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "token", responseData.Data.Token);
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "isAuthenticated", "true");
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "isAdmin", responseData.Data.IsAdmin.ToString());
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "userId", responseData.Data.Id.ToString());

                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "فشل تسجيل الدخول. تأكد من صحة البيانات.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"خطأ: {ex.Message}";
        }
    }
}
